name: Build, Push, and Deploy Docker Image

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.set-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Hub credentials
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Project with Maven
        run: mvn clean package

      - name: Extract Git commit short hash and set output
        id: set-version
        run: |
          VERSION=$(git log -1 --pretty=format:%h)-SNAPSHOT
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create .env file for docker-compose
        run: echo "VERSION=${{ env.VERSION }}" > .env

      - name: Build Docker image using docker-compose
        run: docker compose build --build-arg JAR_FILE=vm-inspector.jar

      - name: Push Docker image to Docker Hub
        run: docker push 1602047/vm-inspector:${{ env.VERSION }}

  deploy:
    needs: build
    runs-on: [self-hosted, vm1, vm2, vm3]
    strategy:
      matrix:
        vm: [vm1, vm2, vm3]
    steps:
      - name: Pull and run latest image on ${{ matrix.vm }}
        run: |
          VERSION=${{ needs.build.outputs.image_version }}
          
          # Stop and remove existing container if running
          docker stop vm-inspector || true
          docker rm vm-inspector || true
          
          # Pull and run the new container
          docker pull 1602047/vm-inspector:$VERSION
          docker run -d --name vm-inspector -p 8080:8080 -p 8099:8010 -v /etc/hostname:/vm_hostname 1602047/vm-inspector:$VERSION
